/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Database.Janjitemu;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author HP
 */
public class FrameJanjiTemu extends javax.swing.JFrame {

    /**
     * Creates new form FrameJanjiTemu
     */
    public FrameJanjiTemu() {
        initComponents();
        tampilkanDataJanjiTemu();
    }
    
    private void tampilkanDataJanjiTemu() {
                try {
            List<Janjitemu> daftarJanjitemu = Janjitemu.semuaJanjitemu();
            DefaultTableModel model = (DefaultTableModel) JanjiTemuTabel.getModel();
            model.setRowCount(0); // Menghapus semua baris yang ada saat ini
            
            for (Janjitemu Janjitemu : daftarJanjitemu) {
                Object[] row = {Janjitemu.getIdJanjitemu(), Janjitemu.getIdPasien(), Janjitemu.getIdDokter(), Janjitemu.getTanggalJanji(), Janjitemu.getStatus()};
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrameJanjiTemu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data Janji Temu!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIdJanjiTemu = new javax.swing.JTextField();
        txtIdPasien = new javax.swing.JTextField();
        txtIdDokter = new javax.swing.JTextField();
        txtTanggalJanji = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JanjiTemuTabel = new javax.swing.JTable();
        cmbStatus = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id Janji Temu");

        jLabel2.setText("Id Pasien");

        jLabel3.setText("Id Dokter");

        jLabel4.setText("Tanggal Janji");

        jLabel5.setText("Status");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        JanjiTemuTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Janji Temu", "Id Pasien", "Id Dokter", "Tanggal Janji", "Status"
            }
        ));
        jScrollPane1.setViewportView(JanjiTemuTabel);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bulanan", "Mingguan" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(btnSimpan))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUbah)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(btnHapus))
                            .addComponent(txtIdJanjiTemu)
                            .addComponent(txtIdPasien)
                            .addComponent(txtIdDokter)
                            .addComponent(txtTanggalJanji)
                            .addComponent(cmbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtIdJanjiTemu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdPasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTanggalJanji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        int idPasien = Integer.parseInt(txtIdPasien.getText());
        int idDokter = Integer.parseInt(txtIdDokter.getText());
        String tanggalJanji = txtTanggalJanji.getText();
        String status = (String) cmbStatus.getSelectedItem();
        
        if (tanggalJanji.isEmpty() || status.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tanggal janji dan status harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Janjitemu JanjitemuBaru = new Janjitemu(idPasien, idDokter, idDokter, tanggalJanji, status);
            try {
                JanjitemuBaru.tambahJanjitemu();
                JOptionPane.showMessageDialog(this, "Data Janji Temu berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                // Setelah menyimpan, kosongkan field
                txtIdPasien.setText("");
                txtIdDokter.setText("");
                txtTanggalJanji.setText("");
                
                tampilkanDataJanjiTemu();
                
            } catch (SQLException ex) {
                Logger.getLogger(FrameJanjiTemu.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data janji temu!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        int idJanjiTemu = Integer.parseInt(txtIdJanjiTemu.getText());
        int idPasien = Integer.parseInt(txtIdPasien.getText());
        int idDokter = Integer.parseInt(txtIdDokter.getText());
        String tanggalJanji = txtTanggalJanji.getText();
        String status = (String) cmbStatus.getSelectedItem();

        if (tanggalJanji.isEmpty() || status.isEmpty()) {
            JOptionPane.showMessageDialog(this, "tanggalJanji dan status harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Janjitemu Janjitemu = new Janjitemu();
            Janjitemu.setIdJanjitemu(idJanjiTemu);
            Janjitemu.setIdPasien(idPasien);
            Janjitemu.setIdDokter(idDokter);
            Janjitemu.setTanggalJanji(tanggalJanji);
            Janjitemu.setStatus(status);
            try {
                Janjitemu.updateJanjitemu();
                JOptionPane.showMessageDialog(this, "Data Janji Temu berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                // Refresh tabel jika diperlukan
                // refreshTabelJanjiTemu();
                
                tampilkanDataJanjiTemu();
            } catch (SQLException ex) {
                Logger.getLogger(FrameJanjiTemu.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Gagal memperbarui data janji temu!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int idJanjiTemu = Integer.parseInt(txtIdJanjiTemu.getText());
        
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data janji temu?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Janjitemu.hapusJanjitemu(idJanjiTemu);
                JOptionPane.showMessageDialog(this, "Data janji temu berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                // Refresh tabel jika diperlukan
                // refreshTabelJanjiTemu();
                
                tampilkanDataJanjiTemu();
            } catch (SQLException ex) {
                Logger.getLogger(FrameJanjiTemu.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Gagal menghapus data janji temu!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameJanjiTemu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameJanjiTemu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameJanjiTemu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameJanjiTemu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameJanjiTemu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JanjiTemuTabel;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIdDokter;
    private javax.swing.JTextField txtIdJanjiTemu;
    private javax.swing.JTextField txtIdPasien;
    private javax.swing.JTextField txtTanggalJanji;
    // End of variables declaration//GEN-END:variables
}
